@page "/change-password"

<div class="main-container">
    <h1>Change Password</h1>
    <form class="form-container" @onsubmit="ChangePasswordHandler">
        <div class="mt-3">
            @if (!string.IsNullOrEmpty(errorMessage))
            {
                <bislerium.Components.Layout.AlertMessage Type="danger" Message="@errorMessage" />
            }
            else if(!string.IsNullOrEmpty(successMessage))
            {
                <bislerium.Components.Layout.AlertMessage Type="success" Message="@successMessage" />
            }
            else if (session.CurrentUser != null && session.CurrentUser.HasInitialPassword)
            {
                <bislerium.Components.Layout.AlertMessage Type="warning" Message="You are using the initial password. Please change it." />
            }

        </div>
        <div class="mt-4 mb-3">
            <div class="form-floating mb-3">
                <input type="password" class="form-control" name="oldPassword" placeholder="Old password" @bind=oldPassword>
                <label for="oldPassword">Old Password</label>
            </div>
            <div class="form-floating mb-3">
                <input type="password" class="form-control" name="newPassword" placeholder="New password" @bind=newPassword>
                <label for="newPassword">New Password</label>
            </div>
            <div class="form-floating mb-3">
                <input type="password" class="form-control" name="confirmPassword" placeholder="Confirm Password" @bind=confirmPassword>
                <label for="confirmPassword">Confirm Password</label>
            </div>
        </div>
        <button class="btn btn-primary w-100">Change Password</button>
    </form>
</div>

@code {
    [CascadingParameter]
    private GlobalState session { get; set; }
    private string? oldPassword { get; set; }
    private string? newPassword { get; set; }
    private string? confirmPassword { get; set; }
    private string? errorMessage { get; set; }
    private string? successMessage { get; set; }

    protected override void OnInitialized()
    {
        errorMessage = "";
        successMessage = "";
    }

    private void ChangePasswordHandler()
    {
        try
        {
            if (oldPassword == null || newPassword == null || confirmPassword == null)
            {
                errorMessage = "Please fill all the fields.";
                return;
            }
            if (confirmPassword != newPassword)
            {
                errorMessage = "The passwords don't match.";
                return;
            }
            errorMessage = "";
            successMessage = "";
            session.CurrentUser = UserServices.ChangePassword(session.CurrentUser.ID, oldPassword, newPassword);
            oldPassword = "";
            newPassword = "";
            confirmPassword = "";
            successMessage = "The password has been changed successfully.";
        }
        catch (Exception e)
        {
            errorMessage = e.Message;
        }
    }

}
